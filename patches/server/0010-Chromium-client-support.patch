From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: DenaryDev <denaryplanet@gmail.com>
Date: Fri, 11 Feb 2022 00:38:44 +0500
Subject: [PATCH] Chromium client support


diff --git a/src/main/java/io/sapphiremc/sapphire/SapphireCommand.java b/src/main/java/io/sapphiremc/sapphire/SapphireCommand.java
index 0bba66fbe64a160010222e2d1fee1179dceebec1..eb53599f609f78b5a4d8258aac1e01dd2ef45b07 100644
--- a/src/main/java/io/sapphiremc/sapphire/SapphireCommand.java
+++ b/src/main/java/io/sapphiremc/sapphire/SapphireCommand.java
@@ -8,6 +8,7 @@ import org.bukkit.Bukkit;
 import org.bukkit.Location;
 import org.bukkit.command.Command;
 import org.bukkit.command.CommandSender;
+import org.bukkit.entity.Player;
 import org.jetbrains.annotations.NotNull;
 import org.jetbrains.annotations.Nullable;
 
@@ -64,6 +65,22 @@ public class SapphireCommand extends Command {
                     sender.sendMessage(prefix + "Sapphire config reload complete, but some functions need you to restart the server.");
                 }
             }
+            case "isChromium" -> {
+                if (args.length == 2) {
+                    Player player = Bukkit.getServer().getPlayer(args[1]);
+                    if (player != null) {
+                        if (player.usesChromiumClient()) {
+                            sender.sendMessage(prefix + "Player %s is using chromium client".formatted(args[1]));
+                        } else {
+                            sender.sendMessage(prefix + "Player %s isn't using chromium client".formatted(args[1]));
+                        }
+                    } else {
+                        sender.sendMessage(prefix + "Player %s is null".formatted(args[1]));
+                    }
+                } else {
+                    sender.sendMessage(prefix + "Usage: /sapphire isChromium <name>");
+                }
+            }
             case "ver", "version" -> {
                 if (args.length == 1) {
                     sender.sendMessage(prefix + "This server is running " + Bukkit.getName() + " version " + Bukkit.getVersion() + " (Git: " + getGitInfo() + ")");
@@ -75,7 +92,7 @@ public class SapphireCommand extends Command {
         return true;
     }
 
-    private final Collection<String> allAliases = Set.of("reload", "version", "ver");
+    private final Collection<String> allAliases = Set.of("reload", "isChromium", "version", "ver");
 
     @Override
     public @NotNull List<String> tabComplete(@NotNull CommandSender sender, @NotNull String alias, @NotNull String[] args, @Nullable Location location) throws IllegalArgumentException {
@@ -93,6 +110,20 @@ public class SapphireCommand extends Command {
                     .toList()
                 );
             }
+        } else if (args.length == 2) {
+            if (args[0].isEmpty()) {
+                aliases.addAll(Bukkit.getOnlinePlayers().stream()
+                    .map(Player::getName)
+                    .toList()
+                );
+            } else {
+                String arg = args[1];
+                aliases.addAll(Bukkit.getOnlinePlayers().stream()
+                    .map(Player::getName)
+                    .filter(s -> s.contains(arg))
+                    .toList()
+                );
+            }
         }
 
         return aliases;
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 12637019da44019475042e4cf88d3e0ebd0fd068..80b450f3c0d7a49b9b9025b8335148d86c3c0e51 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -266,6 +266,7 @@ public class ServerPlayer extends Player {
     private boolean ramBar = false; // Purpur
     private boolean tpsBar = false; // Purpur
     private boolean compassBar = false; // Purpur
+    public boolean chromiumClient = false; // Sapphire
 
     public boolean isRealPlayer; // Paper
     public double lastEntitySpawnRadiusSquared; // Paper - optimise isOutsideRange, this field is in blocks
diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index b05a632576099c8d06152bae57a5f1f69909408d..75689b7462ca197bb4d0d32348110c1aa110e33e 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -3757,6 +3757,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
 
     private static final ResourceLocation MINECRAFT_BRAND = new ResourceLocation("brand"); // Paper - Brand support
     private static final ResourceLocation PURPUR_CLIENT = new ResourceLocation("purpur", "client"); // Purpur
+    private static final ResourceLocation CHROMIUM_CLIENT = new ResourceLocation("chromium", "client"); // Sapphire
 
     @Override
     public void handleCustomPayload(ServerboundCustomPayloadPacket packet) {
@@ -3788,6 +3789,13 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
             } catch (Exception ignore) {
             }
         // Purpur end
+        // Sapphire start
+        } else if (packet.identifier.equals(CHROMIUM_CLIENT)) {
+            try {
+                player.chromiumClient = true;
+            } catch (Exception ignored) {
+            }
+        // Sapphire end
         } else {
             try {
                 byte[] data = new byte[packet.data.readableBytes()];
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index e8e47b23707988a821951896cb8877cf14f56220..2d7faeb5bf9fd5fd5595e6763072d90eb7814bb7 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -3083,4 +3083,11 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         this.getHandle().connection.send(packet);
     }
     // Purpur end
+
+    // Sapphire start
+    @Override
+    public boolean usesChromiumClient() {
+        return getHandle().chromiumClient;
+    }
+    // Sapphire end
 }
