From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: DenaryDev <denaryplanet@gmail.com>
Date: Sun, 9 Jul 2023 02:57:35 +0500
Subject: [PATCH] BanList API fix from Paper


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java b/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
index ce5d0f6b08f6c6f7272f53a939fa9c741637a628..a0edd8d92ec536ecbd8405aa222cf23cc99e46b2 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftOfflinePlayer.java
@@ -112,7 +112,7 @@ public class CraftOfflinePlayer implements OfflinePlayer, ConfigurationSerializa
     }
 
     @Override
-    public BanEntry<PlayerProfile> ban(String reason, Date expires, String source) {
+    public BanEntry<com.destroystokyo.paper.profile.PlayerProfile> ban(String reason, Date expires, String source) { // Paper
         return ((ProfileBanList) this.server.getBanList(BanList.Type.PROFILE)).addBan(this.getPlayerProfile(), reason, expires, source);
     }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/ban/CraftProfileBanEntry.java b/src/main/java/org/bukkit/craftbukkit/ban/CraftProfileBanEntry.java
index 13e5e44b069121e51b9486c445902937f1d6c6d8..4a37c8172b42b10472bb90c9310c7ae3eeaa3481 100644
--- a/src/main/java/org/bukkit/craftbukkit/ban/CraftProfileBanEntry.java
+++ b/src/main/java/org/bukkit/craftbukkit/ban/CraftProfileBanEntry.java
@@ -9,7 +9,7 @@ import org.bukkit.BanEntry;
 import org.bukkit.craftbukkit.profile.CraftPlayerProfile;
 import org.bukkit.profile.PlayerProfile;
 
-public final class CraftProfileBanEntry implements BanEntry<PlayerProfile> {
+public final class CraftProfileBanEntry implements BanEntry<com.destroystokyo.paper.profile.PlayerProfile> { // Paper
     private static final Date minorDate = Date.from(Instant.parse("1899-12-31T04:00:00Z"));
     private final UserBanList list;
     private final GameProfile profile;
@@ -33,8 +33,8 @@ public final class CraftProfileBanEntry implements BanEntry<PlayerProfile> {
     }
 
     @Override
-    public PlayerProfile getBanTarget() {
-        return new CraftPlayerProfile(this.profile);
+    public com.destroystokyo.paper.profile.PlayerProfile getBanTarget() { // Paper
+        return new com.destroystokyo.paper.profile.CraftPlayerProfile(this.profile); // Paper
     }
 
     @Override
diff --git a/src/main/java/org/bukkit/craftbukkit/ban/CraftProfileBanList.java b/src/main/java/org/bukkit/craftbukkit/ban/CraftProfileBanList.java
index b143b6a43da875caf938865a062e2f30019f7788..aa48ac2467973bb9e74385b8cbf88380c13411c5 100644
--- a/src/main/java/org/bukkit/craftbukkit/ban/CraftProfileBanList.java
+++ b/src/main/java/org/bukkit/craftbukkit/ban/CraftProfileBanList.java
@@ -22,32 +22,59 @@ public class CraftProfileBanList implements ProfileBanList {
     }
 
     @Override
-    public BanEntry<PlayerProfile> getBanEntry(String target) {
+    public BanEntry<com.destroystokyo.paper.profile.PlayerProfile> getBanEntry(String target) { // Paper
         Preconditions.checkArgument(target != null, "Target cannot be null");
 
         return this.getBanEntry(CraftProfileBanList.getProfile(target));
     }
 
     @Override
-    public BanEntry<PlayerProfile> getBanEntry(PlayerProfile target) {
+    public BanEntry<com.destroystokyo.paper.profile.PlayerProfile> getBanEntry(PlayerProfile target) { // Paper
         Preconditions.checkArgument(target != null, "Target cannot be null");
 
-        return this.getBanEntry(((CraftPlayerProfile) target).buildGameProfile());
+        return this.getBanEntry(((com.destroystokyo.paper.profile.SharedPlayerProfile) target).buildGameProfile()); // Paper
     }
 
+    // Paper start
     @Override
-    public BanEntry<PlayerProfile> addBan(String target, String reason, Date expires, String source) {
+    public BanEntry<com.destroystokyo.paper.profile.PlayerProfile> getBanEntry(final com.destroystokyo.paper.profile.PlayerProfile target) {
+        Preconditions.checkArgument(target != null, "target cannot be null");
+
+        return this.getBanEntry(((com.destroystokyo.paper.profile.SharedPlayerProfile) target).buildGameProfile());
+    }
+
+    @Override
+    public BanEntry<com.destroystokyo.paper.profile.PlayerProfile> addBan(final com.destroystokyo.paper.profile.PlayerProfile target, final String reason, final Date expires, final String source) {
+        Preconditions.checkArgument(target != null, "PlayerProfile cannot be null");
+        Preconditions.checkArgument(target.getId() != null, "The PlayerProfile UUID cannot be null");
+
+        return this.addBan(((com.destroystokyo.paper.profile.SharedPlayerProfile) target).buildGameProfile(), reason, expires, source);
+    }
+
+    @Override
+    public boolean isBanned(final com.destroystokyo.paper.profile.PlayerProfile target) {
+        return this.isBanned((com.destroystokyo.paper.profile.SharedPlayerProfile) target);
+    }
+
+    @Override
+    public void pardon(final com.destroystokyo.paper.profile.PlayerProfile target) {
+        this.pardon((com.destroystokyo.paper.profile.SharedPlayerProfile) target);
+    }
+    // Paper end
+
+    @Override
+    public BanEntry<com.destroystokyo.paper.profile.PlayerProfile> addBan(String target, String reason, Date expires, String source) { // Paper
         Preconditions.checkArgument(target != null, "Ban target cannot be null");
 
         return this.addBan(CraftProfileBanList.getProfileByName(target), reason, expires, source);
     }
 
     @Override
-    public BanEntry<PlayerProfile> addBan(PlayerProfile target, String reason, Date expires, String source) {
+    public BanEntry<com.destroystokyo.paper.profile.PlayerProfile> addBan(PlayerProfile target, String reason, Date expires, String source) { // Paper
         Preconditions.checkArgument(target != null, "PlayerProfile cannot be null");
         Preconditions.checkArgument(target.getUniqueId() != null, "The PlayerProfile UUID cannot be null");
 
-        return this.addBan(((CraftPlayerProfile) target).buildGameProfile(), reason, expires, source);
+        return this.addBan(((com.destroystokyo.paper.profile.SharedPlayerProfile) target).buildGameProfile(), reason, expires, source); // Paper
     }
 
     @Override
@@ -62,8 +89,8 @@ public class CraftProfileBanList implements ProfileBanList {
     }
 
     @Override
-    public Set<BanEntry<PlayerProfile>> getEntries() {
-        ImmutableSet.Builder<BanEntry<PlayerProfile>> builder = ImmutableSet.builder();
+    public Set<BanEntry<com.destroystokyo.paper.profile.PlayerProfile>> getEntries() { // Paper
+        ImmutableSet.Builder<BanEntry<com.destroystokyo.paper.profile.PlayerProfile>> builder = ImmutableSet.builder(); // Paper
         for (UserBanListEntry entry : this.list.getEntries()) {
             GameProfile profile = entry.getUser();
             builder.add(new CraftProfileBanEntry(profile, entry, this.list));
@@ -74,6 +101,11 @@ public class CraftProfileBanList implements ProfileBanList {
 
     @Override
     public boolean isBanned(PlayerProfile target) {
+        // Paper start
+        return this.isBanned((com.destroystokyo.paper.profile.SharedPlayerProfile) target);
+    }
+    private boolean isBanned(com.destroystokyo.paper.profile.SharedPlayerProfile target) {
+        // Paper end
         Preconditions.checkArgument(target != null, "Target cannot be null");
 
         return this.isBanned(((CraftPlayerProfile) target).buildGameProfile());
@@ -88,9 +120,14 @@ public class CraftProfileBanList implements ProfileBanList {
 
     @Override
     public void pardon(PlayerProfile target) {
+        // Paper start
+        this.pardon((com.destroystokyo.paper.profile.SharedPlayerProfile) target);
+    }
+    private void pardon(com.destroystokyo.paper.profile.SharedPlayerProfile target) {
+        // Paper end
         Preconditions.checkArgument(target != null, "Target cannot be null");
 
-        this.pardon(((CraftPlayerProfile) target).buildGameProfile());
+        this.pardon(target.buildGameProfile()); // Paper
     }
 
     @Override
@@ -100,7 +137,7 @@ public class CraftProfileBanList implements ProfileBanList {
         this.pardon(CraftProfileBanList.getProfile(target));
     }
 
-    public BanEntry<PlayerProfile> getBanEntry(GameProfile profile) {
+    public BanEntry<com.destroystokyo.paper.profile.PlayerProfile> getBanEntry(GameProfile profile) { // Paper
         if (profile == null) {
             return null;
         }
@@ -113,7 +150,7 @@ public class CraftProfileBanList implements ProfileBanList {
         return new CraftProfileBanEntry(profile, entry, this.list);
     }
 
-    public BanEntry<PlayerProfile> addBan(GameProfile profile, String reason, Date expires, String source) {
+    public BanEntry<com.destroystokyo.paper.profile.PlayerProfile> addBan(GameProfile profile, String reason, Date expires, String source) { // Paper
         if (profile == null) {
             return null;
         }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index fa6f0d5d6c0ca6427fa3a8ad88dc66c9384e27b6..f9c48d7d2813c279578e69c9ab7a4db7c8995cc9 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -1641,13 +1641,13 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     }
 
     @Override
-    public BanEntry<PlayerProfile> ban(String reason, Date expires, String source) {
+    public BanEntry<com.destroystokyo.paper.profile.PlayerProfile> ban(String reason, Date expires, String source) { // Paper
         return this.ban(reason, expires, source, true);
     }
 
     @Override
-    public BanEntry<PlayerProfile> ban(String reason, Date expires, String source, boolean kickPlayer) {
-        BanEntry<PlayerProfile> banEntry = ((ProfileBanList) server.getBanList(BanList.Type.PROFILE)).addBan(this.getPlayerProfile(), reason, expires, source);
+    public BanEntry<com.destroystokyo.paper.profile.PlayerProfile> ban(String reason, Date expires, String source, boolean kickPlayer) { // Paper
+        BanEntry<com.destroystokyo.paper.profile.PlayerProfile> banEntry = ((ProfileBanList) server.getBanList(BanList.Type.PROFILE)).addBan(this.getPlayerProfile(), reason, expires, source); // Paper
         if (kickPlayer) {
             this.kickPlayer(reason);
         }
