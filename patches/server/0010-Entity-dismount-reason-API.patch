From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: DenaryDev <denaryplanet@gmail.com>
Date: Mon, 2 May 2022 02:19:37 +0500
Subject: [PATCH] Entity dismount reason API

Ported from EmpireCraft

diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 24d4402e57d8d10213c655b06932bb79cc7d95df..ea5c3be5ade9f8d9265d104043d70d4686046cce 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -745,6 +745,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
                                 if (!entity1.isRemoved() && entity1.hasPassenger(entity)) {
                                     return;
                                 }
+                                if (entity1.isRemoved()) entity.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DEAD_VEHICLE; // Sapphire
 
                                 entity.stopRiding();
                             }
@@ -1351,6 +1352,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
             //} finally { timer.stopTiming(); }// Paper - EAR2 timings // Purpur
             }
         } else {
+            if (passenger.isRemoved()) passenger.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DEAD; // Sapphire
             passenger.stopRiding();
         }
     }
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index cd03cccff00b862f8b020921b00526412e3c80a0..69302c1aac0f7b35a8d5b234704c0ac45fd30249 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -1747,10 +1747,11 @@ public class ServerPlayer extends Player {
 
     public void disconnect() {
         this.disconnected = true;
-        this.ejectPassengers();
+        this.ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DISCONNECT); // Sapphire
 
         // Paper start - Workaround an issue where the vehicle doesn't track the passenger disconnection dismount.
         if (this.isPassenger() && this.getVehicle() instanceof ServerPlayer) {
+            this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DISCONNECT; // Sapphire
             this.stopRiding();
         }
         // Paper end
@@ -1905,6 +1906,7 @@ public class ServerPlayer extends Player {
         ChunkPos chunkcoordintpair = new ChunkPos(BlockPos.containing(d0, d1, d2));
 
         worldserver.getChunkSource().addRegionTicket(TicketType.POST_TELEPORT, chunkcoordintpair, 1, this.getId());
+        this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.TELEPORT; // Sapphire
         this.stopRiding();
         if (this.isSleeping()) {
             this.stopSleepInBed(true, true);
@@ -1963,6 +1965,7 @@ public class ServerPlayer extends Player {
             this.connection.send(new ClientboundGameEventPacket(ClientboundGameEventPacket.CHANGE_GAME_MODE, (float) gameMode.getId()));
             if (gameMode == GameType.SPECTATOR) {
                 this.removeEntitiesOnShoulder();
+                this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.SPECTATE; // Sapphire
                 this.stopRiding();
             } else {
                 this.setCamera(this);
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index ff56981a03b55f9ee1ec8ad36adaf9849b2c914b..eabf4a16d31dc5569cae7b84d45047282c133221 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -622,6 +622,7 @@ public abstract class PlayerList {
 
             if (entity.hasExactlyOnePlayerPassenger()) {
                 PlayerList.LOGGER.debug("Removing player mount");
+                entityplayer.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DISCONNECT; // Sapphire
                 entityplayer.stopRiding();
                 entity.getPassengersAndSelf().forEach((entity1) -> {
                     // Paper start
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index e71eca3ddbbeb3168dd73433b6d6ffe9f6755f77..26cfae3f41e20730dd8d3f08ff063fec33ce7d42 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -573,6 +573,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         this.teleportTo(worldserver, null);
     }
     // Paper end - make end portalling safe
+    public org.spigotmc.event.entity.EntityDismountEvent.DismountReason dismountReason; // Sapphire
 
     public Entity(EntityType<?> type, Level world) {
         this.id = Entity.ENTITY_COUNTER.incrementAndGet();
@@ -830,6 +831,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         if (firstTick && this instanceof net.minecraft.world.entity.NeutralMob neutralMob) neutralMob.tickInitialPersistentAnger(level); // Paper - Update last hurt when ticking
         this.feetBlockState = null;
         if (this.isPassenger() && this.getVehicle().isRemoved()) {
+            this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DEAD_VEHICLE; // Sapphire
             this.stopRiding();
         }
 
@@ -2730,6 +2732,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
                 return false;
             } else {
                 if (this.isPassenger()) {
+                    this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DEAD_VEHICLE; // Sapphire
                     this.stopRiding();
                 }
 
@@ -2755,6 +2758,12 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     }
 
     public void ejectPassengers() {
+        // Sapphire start
+        ejectPassengers(null);
+    }
+
+    public void ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.DismountReason dismountReason) {
+        // Sapphire end
         for (int i = this.passengers.size() - 1; i >= 0; --i) {
             ((Entity) this.passengers.get(i)).stopRiding();
         }
@@ -2851,6 +2860,8 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     // Paper start
     protected boolean removePassenger(Entity entity) { return removePassenger(entity, false);}
     protected boolean removePassenger(Entity entity, boolean suppressCancellation) { // CraftBukkit
+        org.spigotmc.event.entity.EntityDismountEvent.DismountReason dismountReason = entity.dismountReason; // Sapphire
+        entity.dismountReason = null; // Sapphire
         // Paper end
         if (entity.getVehicle() == this) {
             throw new IllegalStateException("Use x.stopRiding(y), not y.removePassenger(x)");
@@ -2875,7 +2886,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
             }
             // CraftBukkit end
             // Spigot start
-            org.spigotmc.event.entity.EntityDismountEvent event = new org.spigotmc.event.entity.EntityDismountEvent(entity.getBukkitEntity(), this.getBukkitEntity(), !suppressCancellation); // Paper
+            org.spigotmc.event.entity.EntityDismountEvent event = new org.spigotmc.event.entity.EntityDismountEvent(entity.getBukkitEntity(), this.getBukkitEntity(), !suppressCancellation, dismountReason); // Paper // Sapphire
             // Suppress during worldgen
             if (this.valid) {
                 Bukkit.getPluginManager().callEvent(event);
@@ -4679,7 +4690,12 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
             this.stopRiding();
         }
 
-        if (reason != RemovalReason.UNLOADED_TO_CHUNK) this.getPassengers().forEach(Entity::stopRiding); // Paper - chunk system - don't adjust passenger state when unloading, it's just not safe (and messes with our logic in entity chunk unload)
+        // Sapphire start
+        if (reason != RemovalReason.UNLOADED_TO_CHUNK) this.getPassengers().forEach(entity -> { // Paper - chunk system - don't adjust passenger state when unloading, it's just not safe (and messes with our logic in entity chunk unload)
+            entity.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DEAD_VEHICLE;
+            entity.stopRiding();
+        });
+        // Sapphire end
         this.levelCallback.onRemove(reason);
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index ddd1e392299bfb84eefc0b8b6ebc02150cf6d97f..8d19969b1d352b1ba269c77fecd3f358a384d0c1 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -441,6 +441,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
                 }
 
                 if (!this.level.isClientSide && this.isPassenger() && this.getVehicle() != null && this.getVehicle().dismountsUnderwater()) {
+                    this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.WATER; // Sapphire
                     this.stopRiding();
                 }
             } else if (this.getAirSupply() < this.getMaxAirSupply()) {
@@ -4308,6 +4309,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
 
     public void startSleeping(BlockPos pos) {
         if (this.isPassenger()) {
+            if (this instanceof net.minecraft.world.entity.player.Player) this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.PLAYER; // Sapphire
             this.stopRiding();
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index 8e2274f7dce34e0997356205cf96e46f8d41cca1..3d5824bc6023454aa89cf5546b7220d951889414 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -1571,6 +1571,7 @@ public abstract class Mob extends LivingEntity implements Targeting {
         }
 
         if (this.isPassenger()) {
+            this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.LEASH; // Sapphire
             this.stopRiding();
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 7edcb5b86f27d05a0526229262e0d3a3e160362b..10e6d4e69b49811d04fb46c377e276dda5ea1596 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -558,6 +558,7 @@ public abstract class Player extends LivingEntity {
     @Override
     public void rideTick() {
         if (!this.level.isClientSide && this.wantsToStopRiding() && this.isPassenger()) {
+            this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.PLAYER; // Sapphire
             this.stopRiding();
             // CraftBukkit start - SPIGOT-7316: no longer passenger, dismount and return
             if (!this.isPassenger()) {
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java b/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
index ddcd7ada9f4bf5653bd8bf7c6cdb35d7243367d9..9ff1e450ee58be247b10f5cdb9d7d8ce39c5f08c 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
@@ -275,7 +275,7 @@ public abstract class AbstractMinecart extends Entity {
                         return true;
                     }
                     // CraftBukkit end
-                    this.ejectPassengers();
+                    this.ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DEAD_VEHICLE); // Sapphire
                     if (flag && !this.hasCustomName()) {
                         this.discard();
                     } else {
diff --git a/src/main/java/net/minecraft/world/item/ChorusFruitItem.java b/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
index d38161d6266c2460666434d5f0930ecf16096977..ba3d7eaa974505bb34da0e43478444387e041960 100644
--- a/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
+++ b/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
@@ -34,6 +34,7 @@ public class ChorusFruitItem extends Item {
                 double d5 = user.getZ() + (user.getRandom().nextDouble() - 0.5D) * 16.0D;
 
                 if (user.isPassenger()) {
+                    user.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.TELEPORT; // Sapphire
                     user.stopRiding();
                 }
 
