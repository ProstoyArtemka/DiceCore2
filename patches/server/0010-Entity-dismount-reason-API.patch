From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: DenaryDev <denaryplanet@gmail.com>
Date: Mon, 2 May 2022 02:19:37 +0500
Subject: [PATCH] Entity dismount reason API

Ported from EmpireCraft

diff --git a/src/main/java/net/minecraft/server/commands/TeleportCommand.java b/src/main/java/net/minecraft/server/commands/TeleportCommand.java
index 027ca5b67c544048815ddef4bb36d0a8fc3d038c..4988e3ac6e3ed761ddf05d9f5dccf459679a6dd8 100644
--- a/src/main/java/net/minecraft/server/commands/TeleportCommand.java
+++ b/src/main/java/net/minecraft/server/commands/TeleportCommand.java
@@ -158,6 +158,7 @@ public class TeleportCommand {
                 ChunkPos chunkcoordintpair = new ChunkPos(new BlockPos(x, y, z));
 
                 world.getChunkSource().addRegionTicket(TicketType.POST_TELEPORT, chunkcoordintpair, 1, target.getId());
+                target.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.TELEPORT; // Sapphire
                 target.stopRiding();
                 if (((ServerPlayer) target).isSleeping()) {
                     ((ServerPlayer) target).stopSleepInBed(true, true);
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index ef2977cb9bfa7a6070be6d62d2d2c863c9d136f1..c35d7c83f5cd7face0d561b762dd47edf527d4ef 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -745,6 +745,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
                                 if (!entity1.isRemoved() && entity1.hasPassenger(entity)) {
                                     return;
                                 }
+                                if (entity1.isRemoved()) entity.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DEAD_VEHICLE; // Sapphire
 
                                 entity.stopRiding();
                             }
@@ -1352,6 +1353,8 @@ public class ServerLevel extends Level implements WorldGenLevel {
             //} finally { timer.stopTiming(); }// Paper - EAR2 timings // Purpur
             }
         } else {
+            if (passenger.isRemoved()) passenger.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DEAD; // Sapphire
+
             passenger.stopRiding();
         }
     }
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 6700520e2023dfb03748d4b6a5afc9d6aa9783ae..b10d5410495dc858c7d33ca0e1aa8cd9cd1e00d9 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -1757,10 +1757,11 @@ public class ServerPlayer extends Player {
 
     public void disconnect() {
         this.disconnected = true;
-        this.ejectPassengers();
+        this.ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DISCONNECT); // Sapphire
 
         // Paper start - Workaround an issue where the vehicle doesn't track the passenger disconnection dismount.
         if (this.isPassenger() && this.getVehicle() instanceof ServerPlayer) {
+            this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DISCONNECT; // Sapphire
             this.stopRiding();
         }
         // Paper end
@@ -1947,6 +1948,7 @@ public class ServerPlayer extends Player {
             this.connection.send(new ClientboundGameEventPacket(ClientboundGameEventPacket.CHANGE_GAME_MODE, (float) gameMode.getId()));
             if (gameMode == GameType.SPECTATOR) {
                 this.removeEntitiesOnShoulder();
+                this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.SPECTATE; // Sapphire
                 this.stopRiding();
             } else {
                 this.setCamera(this);
@@ -2204,7 +2206,7 @@ public class ServerPlayer extends Player {
 
         if (entity != this) {
             // Make sure we're in the right place
-            this.ejectPassengers(); // teleport can fail if we have passengers...
+            this.ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.DismountReason.SPECTATE); // teleport can fail if we have passengers... // Sapphire
             this.getBukkitEntity().teleport(new Location(entity.getCommandSenderWorld().getWorld(), entity.getX(), entity.getY(), entity.getZ(), this.getYRot(), this.getXRot()), TeleportCause.SPECTATE); // Correctly handle cross-world entities from api calls by using CB teleport
 
             // Make sure we're tracking the entity before sending
@@ -2273,6 +2275,7 @@ public class ServerPlayer extends Player {
     public void teleportTo(ServerLevel worldserver, double d0, double d1, double d2, float f, float f1, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause) {
         // CraftBukkit end
         this.setCamera(this);
+        this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.TELEPORT; // Sapphire
         this.stopRiding();
         /* CraftBukkit start - replace with bukkit handling for multi-world
         if (worldserver == this.level) {
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 7d5ba99a674855967256b74fd9fd21749dcde8a3..f0839d1cb13a926edba8203e94a11164ac26626a 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -602,6 +602,7 @@ public abstract class PlayerList {
 
             if (entity.hasExactlyOnePlayerPassenger()) {
                 PlayerList.LOGGER.debug("Removing player mount");
+                entityplayer.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DISCONNECT; // Sapphire
                 entityplayer.stopRiding();
                 entity.getPassengersAndSelf().forEach((entity1) -> {
                     // Paper start
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 35afff85bcd4019789e4c40833b35df15a373b8c..d5ef4c057f2d8bee8d6d7b786c9185ded04cdc40 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -571,6 +571,9 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     }
     // Paper end - make end portalling safe
 
+    // Paper end
+    public org.spigotmc.event.entity.EntityDismountEvent.DismountReason dismountReason; // Sapphire
+
     public Entity(EntityType<?> type, Level world) {
         this.id = Entity.ENTITY_COUNTER.incrementAndGet();
         this.passengers = ImmutableList.of();
@@ -827,6 +830,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         if (firstTick && this instanceof net.minecraft.world.entity.NeutralMob neutralMob) neutralMob.tickInitialPersistentAnger(level); // Paper - Update last hurt when ticking
         this.feetBlockState = null;
         if (this.isPassenger() && this.getVehicle().isRemoved()) {
+            this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DEAD_VEHICLE; // Sapphire
             this.stopRiding();
         }
 
@@ -2704,6 +2708,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
                 return false;
             } else {
                 if (this.isPassenger()) {
+                    this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.TRANSFER; // Sapphire
                     this.stopRiding();
                 }
 
@@ -2729,7 +2734,14 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     }
 
     public void ejectPassengers() {
+        // Sapphire start
+        ejectPassengers(null);
+    }
+
+    public void ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.DismountReason dismountReason) {
+        // Sapphire end
         for (int i = this.passengers.size() - 1; i >= 0; --i) {
+            this.passengers.get(i).dismountReason = dismountReason; // Sapphire
             ((Entity) this.passengers.get(i)).stopRiding();
         }
 
@@ -2827,6 +2839,8 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     // Paper start
     protected boolean removePassenger(Entity entity) { return removePassenger(entity, false);}
     protected boolean removePassenger(Entity entity, boolean suppressCancellation) { // CraftBukkit
+        org.spigotmc.event.entity.EntityDismountEvent.DismountReason dismountReason = entity.dismountReason; // Sapphire
+        entity.dismountReason = null; // Sapphire
         // Paper end
         if (entity.getVehicle() == this) {
             throw new IllegalStateException("Use x.stopRiding(y), not y.removePassenger(x)");
@@ -2851,7 +2865,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
             }
             // CraftBukkit end
             // Spigot start
-            org.spigotmc.event.entity.EntityDismountEvent event = new org.spigotmc.event.entity.EntityDismountEvent(entity.getBukkitEntity(), this.getBukkitEntity(), !suppressCancellation); // Paper
+            org.spigotmc.event.entity.EntityDismountEvent event = new org.spigotmc.event.entity.EntityDismountEvent(entity.getBukkitEntity(), this.getBukkitEntity(), !suppressCancellation, dismountReason); // Paper // Sapphire
             // Suppress during worldgen
             if (this.valid) {
                 Bukkit.getPluginManager().callEvent(event);
@@ -4582,10 +4596,16 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         }
 
         if (this.removalReason.shouldDestroy()) {
+            this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DEAD; // Sapphire
             this.stopRiding();
         }
 
-        if (reason != RemovalReason.UNLOADED_TO_CHUNK) this.getPassengers().forEach(Entity::stopRiding); // Paper - chunk system - don't adjust passenger state when unloading, it's just not safe (and messes with our logic in entity chunk unload)
+        // Sapphire start
+        if (reason != RemovalReason.UNLOADED_TO_CHUNK) this.getPassengers().forEach(entity -> { // Paper - chunk system - don't adjust passenger state when unloading, it's just not safe (and messes with our logic in entity chunk unload)
+            entity.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DEAD_VEHICLE;
+            entity.stopRiding();
+        });
+        // Sapphire end
         this.levelCallback.onRemove(reason);
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index b5bb1c052e5a6479291ba4d260c3e9a533435b96..48269185411404a00b05fa0ce07546054898ab63 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -446,6 +446,7 @@ public abstract class LivingEntity extends Entity {
                 }
 
                 if (!this.level.isClientSide && this.isPassenger() && this.getVehicle() != null && !this.getVehicle().rideableUnderWater()) {
+                    this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.WATER; // Sapphire
                     this.stopRiding();
                 }
             } else if (this.getAirSupply() < this.getMaxAirSupply()) {
@@ -4345,6 +4346,7 @@ public abstract class LivingEntity extends Entity {
 
     public void startSleeping(BlockPos pos) {
         if (this.isPassenger()) {
+            if (this instanceof net.minecraft.world.entity.player.Player) this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.PLAYER; // Sapphire
             this.stopRiding();
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index 7bd4e95fcaf3855a4fe412b5898a97d7992caad3..2fbccee91281f8f094f8b5544fb9e120b48c72c0 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -1540,6 +1540,7 @@ public abstract class Mob extends LivingEntity {
         }
 
         if (this.isPassenger()) {
+            this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.LEASH; // Sapphire
             this.stopRiding();
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 5a482f4c2a86d3f93fbbe8fc8fd29b07ebd50dc8..d69af899e7a19bede83eeb48a5d6820e9fa30dbf 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -555,6 +555,7 @@ public abstract class Player extends LivingEntity {
     @Override
     public void rideTick() {
         if (!this.level.isClientSide && this.wantsToStopRiding() && this.isPassenger()) {
+            this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.PLAYER; // Sapphire
             this.stopRiding();
             this.setShiftKeyDown(false);
         } else {
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java b/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
index 36da85fe7ba6c6931e96bf4cf77cbe5f079299af..b6f0db6ce5bd5cfd77684a70ac6455a451e4132c 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
@@ -274,7 +274,7 @@ public abstract class AbstractMinecart extends Entity {
                         return true;
                     }
                     // CraftBukkit end
-                    this.ejectPassengers();
+                    this.ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DEAD_VEHICLE); // Sapphire
                     if (flag && !this.hasCustomName()) {
                         this.discard();
                     } else {
diff --git a/src/main/java/net/minecraft/world/item/ChorusFruitItem.java b/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
index d38161d6266c2460666434d5f0930ecf16096977..ba3d7eaa974505bb34da0e43478444387e041960 100644
--- a/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
+++ b/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
@@ -34,6 +34,7 @@ public class ChorusFruitItem extends Item {
                 double d5 = user.getZ() + (user.getRandom().nextDouble() - 0.5D) * 16.0D;
 
                 if (user.isPassenger()) {
+                    user.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.TELEPORT; // Sapphire
                     user.stopRiding();
                 }
 
