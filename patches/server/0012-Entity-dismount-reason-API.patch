From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: DenaryDev <denaryplanet@gmail.com>
Date: Mon, 2 May 2022 02:19:37 +0500
Subject: [PATCH] Entity dismount reason API

Ported from EmpireCraft

diff --git a/src/main/java/net/minecraft/server/commands/TeleportCommand.java b/src/main/java/net/minecraft/server/commands/TeleportCommand.java
index 027ca5b67c544048815ddef4bb36d0a8fc3d038c..4988e3ac6e3ed761ddf05d9f5dccf459679a6dd8 100644
--- a/src/main/java/net/minecraft/server/commands/TeleportCommand.java
+++ b/src/main/java/net/minecraft/server/commands/TeleportCommand.java
@@ -158,6 +158,7 @@ public class TeleportCommand {
                 ChunkPos chunkcoordintpair = new ChunkPos(new BlockPos(x, y, z));
 
                 world.getChunkSource().addRegionTicket(TicketType.POST_TELEPORT, chunkcoordintpair, 1, target.getId());
+                target.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.TELEPORT; // Sapphire
                 target.stopRiding();
                 if (((ServerPlayer) target).isSleeping()) {
                     ((ServerPlayer) target).stopSleepInBed(true, true);
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index a8a126f7fb65867a6e47cfb048218abff5d8a64b..716235cc054c59951f69b5471134bed14429129a 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -709,6 +709,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
                                 if (!entity1.isRemoved() && entity1.hasPassenger(entity)) {
                                     return;
                                 }
+                                if (entity1.isRemoved()) entity.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DEAD_VEHICLE; // Sapphire
 
                                 entity.stopRiding();
                             }
@@ -1298,6 +1299,8 @@ public class ServerLevel extends Level implements WorldGenLevel {
             //} finally { timer.stopTiming(); }// Paper - EAR2 timings // Purpur
             }
         } else {
+            if (passenger.isRemoved()) passenger.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DEAD; // Sapphire
+
             passenger.stopRiding();
         }
     }
diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 216af59273f05480c3383899c475fcd600ecd00a..db2a4310876f4ed60b7b2a2f447c1bc9a0925a35 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -1719,10 +1719,11 @@ public class ServerPlayer extends Player {
 
     public void disconnect() {
         this.disconnected = true;
-        this.ejectPassengers();
+        this.ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DISCONNECT); // Sapphire
 
         // Paper start - Workaround an issue where the vehicle doesn't track the passenger disconnection dismount.
         if (this.isPassenger() && this.getVehicle() instanceof ServerPlayer) {
+            this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DISCONNECT; // Sapphire
             this.stopRiding();
         }
         // Paper end
@@ -1901,6 +1902,7 @@ public class ServerPlayer extends Player {
             this.connection.send(new ClientboundGameEventPacket(ClientboundGameEventPacket.CHANGE_GAME_MODE, (float) gameMode.getId()));
             if (gameMode == GameType.SPECTATOR) {
                 this.removeEntitiesOnShoulder();
+                this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.SPECTATE; // Sapphire
                 this.stopRiding();
             } else {
                 this.setCamera(this);
@@ -2146,7 +2148,7 @@ public class ServerPlayer extends Player {
 
         if (entity != this) {
             // Make sure we're in the right place
-            this.ejectPassengers(); // teleport can fail if we have passengers...
+            this.ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.DismountReason.SPECTATE); // teleport can fail if we have passengers... // Sapphire
             this.getBukkitEntity().teleport(new Location(entity.getCommandSenderWorld().getWorld(), entity.getX(), entity.getY(), entity.getZ(), this.getYRot(), this.getXRot()), TeleportCause.SPECTATE); // Correctly handle cross-world entities from api calls by using CB teleport
 
             // Make sure we're tracking the entity before sending
@@ -2214,6 +2216,7 @@ public class ServerPlayer extends Player {
     public void teleportTo(ServerLevel worldserver, double d0, double d1, double d2, float f, float f1, org.bukkit.event.player.PlayerTeleportEvent.TeleportCause cause) {
         // CraftBukkit end
         this.setCamera(this);
+        this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.TELEPORT; // Sapphire
         this.stopRiding();
         /* CraftBukkit start - replace with bukkit handling for multi-world
         if (worldserver == this.level) {
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 1da509127582618d6ced45e6e8a310304e9ecc16..05204b66da01ae69ca9e87e4045680907500b4b6 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -660,6 +660,7 @@ public abstract class PlayerList {
 
             if (entity.hasExactlyOnePlayerPassenger()) {
                 PlayerList.LOGGER.debug("Removing player mount");
+                entityplayer.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DISCONNECT; // Sapphire
                 entityplayer.stopRiding();
                 entity.getPassengersAndSelf().forEach((entity1) -> {
                     // Paper start
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index ab3f5d8df443f1f23f4cf11af46ed4c95ff30f0e..26aa885f8ac187cb5249f8e2f4394bff7fa32606 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -568,6 +568,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     public int sectionY = Integer.MIN_VALUE;
     public int sectionZ = Integer.MIN_VALUE;
     // Paper end
+    public org.spigotmc.event.entity.EntityDismountEvent.DismountReason dismountReason; // Sapphire
 
     public Entity(EntityType<?> type, Level world) {
         this.id = Entity.ENTITY_COUNTER.incrementAndGet();
@@ -825,6 +826,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         if (firstTick && this instanceof net.minecraft.world.entity.NeutralMob neutralMob) neutralMob.tickInitialPersistentAnger(level); // Paper - Update last hurt when ticking
         this.feetBlockState = null;
         if (this.isPassenger() && this.getVehicle().isRemoved()) {
+            this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DEAD_VEHICLE; // Sapphire
             this.stopRiding();
         }
 
@@ -2662,6 +2664,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
                 return false;
             } else {
                 if (this.isPassenger()) {
+                    this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.TRANSFER; // Sapphire
                     this.stopRiding();
                 }
 
@@ -2687,7 +2690,14 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     }
 
     public void ejectPassengers() {
+        // Sapphire start
+        ejectPassengers(null);
+    }
+
+    public void ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.DismountReason dismountReason) {
+        // Sapphire end
         for (int i = this.passengers.size() - 1; i >= 0; --i) {
+            this.passengers.get(i).dismountReason = dismountReason; // Sapphire
             ((Entity) this.passengers.get(i)).stopRiding();
         }
 
@@ -2781,6 +2791,8 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     // Paper start
     protected boolean removePassenger(Entity entity) { return removePassenger(entity, false);}
     protected boolean removePassenger(Entity entity, boolean suppressCancellation) { // CraftBukkit
+        org.spigotmc.event.entity.EntityDismountEvent.DismountReason dismountReason = entity.dismountReason; // Sapphire
+        entity.dismountReason = null; // Sapphire
         // Paper end
         if (entity.getVehicle() == this) {
             throw new IllegalStateException("Use x.stopRiding(y), not y.removePassenger(x)");
@@ -2805,7 +2817,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
             }
             // CraftBukkit end
             // Spigot start
-            org.spigotmc.event.entity.EntityDismountEvent event = new org.spigotmc.event.entity.EntityDismountEvent(entity.getBukkitEntity(), this.getBukkitEntity(), !suppressCancellation); // Paper
+            org.spigotmc.event.entity.EntityDismountEvent event = new org.spigotmc.event.entity.EntityDismountEvent(entity.getBukkitEntity(), this.getBukkitEntity(), !suppressCancellation, dismountReason); // Paper // Sapphire
             // Suppress during worldgen
             if (this.valid) {
                 Bukkit.getPluginManager().callEvent(event);
@@ -4459,10 +4471,16 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         }
 
         if (this.removalReason.shouldDestroy()) {
+            this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DEAD; // Sapphire
             this.stopRiding();
         }
 
-        this.getPassengers().forEach(Entity::stopRiding);
+        // Sapphire start
+        this.getPassengers().forEach(entity -> {
+            entity.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DEAD_VEHICLE;
+            entity.stopRiding();
+        });
+        // Sapphire end
         this.levelCallback.onRemove(reason);
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index ee98cdc21cc5c46665788b27d048f9549b7adca4..84247e25bd76448fb59c35427175ac1069abc5e3 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -443,6 +443,7 @@ public abstract class LivingEntity extends Entity {
                 }
 
                 if (!this.level.isClientSide && this.isPassenger() && this.getVehicle() != null && !this.getVehicle().rideableUnderWater()) {
+                    this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.WATER; // Sapphire
                     this.stopRiding();
                 }
             } else if (this.getAirSupply() < this.getMaxAirSupply()) {
@@ -4286,6 +4287,7 @@ public abstract class LivingEntity extends Entity {
 
     public void startSleeping(BlockPos pos) {
         if (this.isPassenger()) {
+            if (this instanceof net.minecraft.world.entity.player.Player) this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.PLAYER; // Sapphire
             this.stopRiding();
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index b75243eca01cae108093368e426ea2d6b6ef1057..a77175125317c3b7ea342476d8b98d6608e3189e 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -1512,6 +1512,7 @@ public abstract class Mob extends LivingEntity {
         }
 
         if (this.isPassenger()) {
+            this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.LEASH; // Sapphire
             this.stopRiding();
         }
 
diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 64ca2c92c4908bbb0272d1c22870af68aa9daad2..32e6d50f2223ed6e0fef0205857ffe48bea4a9a8 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -560,6 +560,7 @@ public abstract class Player extends LivingEntity {
     @Override
     public void rideTick() {
         if (!this.level.isClientSide && this.wantsToStopRiding() && this.isPassenger()) {
+            this.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.PLAYER; // Sapphire
             this.stopRiding();
             this.setShiftKeyDown(false);
         } else {
diff --git a/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java b/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
index b16ad4d5f3cdf8e0e44f74ae481b04d38e7a6c9e..346f48dcdc5d573d23d80f49571b76b1d9fe58da 100644
--- a/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
+++ b/src/main/java/net/minecraft/world/entity/vehicle/AbstractMinecart.java
@@ -267,7 +267,7 @@ public abstract class AbstractMinecart extends Entity {
                         return true;
                     }
                     // CraftBukkit end
-                    this.ejectPassengers();
+                    this.ejectPassengers(org.spigotmc.event.entity.EntityDismountEvent.DismountReason.DEAD_VEHICLE); // Sapphire
                     if (flag && !this.hasCustomName()) {
                         this.discard();
                     } else {
diff --git a/src/main/java/net/minecraft/world/item/ChorusFruitItem.java b/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
index d38161d6266c2460666434d5f0930ecf16096977..ba3d7eaa974505bb34da0e43478444387e041960 100644
--- a/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
+++ b/src/main/java/net/minecraft/world/item/ChorusFruitItem.java
@@ -34,6 +34,7 @@ public class ChorusFruitItem extends Item {
                 double d5 = user.getZ() + (user.getRandom().nextDouble() - 0.5D) * 16.0D;
 
                 if (user.isPassenger()) {
+                    user.dismountReason = org.spigotmc.event.entity.EntityDismountEvent.DismountReason.TELEPORT; // Sapphire
                     user.stopRiding();
                 }
 
