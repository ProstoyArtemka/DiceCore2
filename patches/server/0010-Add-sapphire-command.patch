From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: DenaryDev <denaryplanet@gmail.com>
Date: Sat, 4 Dec 2021 00:55:10 +0500
Subject: [PATCH] Add sapphire command


diff --git a/src/main/java/io/sapphiremc/sapphire/SapphireCommand.java b/src/main/java/io/sapphiremc/sapphire/SapphireCommand.java
new file mode 100644
index 0000000000000000000000000000000000000000..2e83c95e4bbe63bb3102a462130ae941d7037bc1
--- /dev/null
+++ b/src/main/java/io/sapphiremc/sapphire/SapphireCommand.java
@@ -0,0 +1,61 @@
+package io.sapphiremc.sapphire;
+
+import net.md_5.bungee.api.ChatColor;
+import net.minecraft.server.MinecraftServer;
+import org.bukkit.Bukkit;
+import org.bukkit.command.Command;
+import org.bukkit.command.CommandSender;
+import org.jetbrains.annotations.NotNull;
+
+import java.io.File;
+import java.util.Collections;
+import java.util.List;
+import java.util.stream.Collectors;
+import java.util.stream.Stream;
+
+public class SapphireCommand extends Command {
+
+    public static void register() {
+        MinecraftServer.getServer().server.getCommandMap().register("Sapphire", "sapphire", new SapphireCommand());
+    }
+
+    protected SapphireCommand() {
+        super("sapphire");
+        this.description = "Sapphire related commands";
+        this.usageMessage = "/sapphire [reload | version]";
+        this.setPermission("bukkit.command.sapphire");
+    }
+
+    @Override
+    public @NotNull List<String> tabComplete(@NotNull CommandSender sender, @NotNull String alias, @NotNull String[] args) {
+        if (1 == args.length) {
+            return Stream.of("reload", "version")
+                .filter(arg -> arg.startsWith(args[0].toLowerCase()) && sender.hasPermission("bukkit.command.sapphire." + arg))
+                .collect(Collectors.toList());
+        }
+
+        return Collections.emptyList();
+    }
+
+    @Override
+    public boolean execute(@NotNull CommandSender sender, @NotNull String commandLabel, @NotNull String[] args) {
+        if (!testPermission(sender)) return true;
+        String prefix = ChatColor.of("#004EFF") + "" + ChatColor.BOLD + "Sapphire " + ChatColor.of("#1F2B44") + "â–¶ " + ChatColor.of("#D4E1FF");
+
+        if (args.length != 1) {
+            sender.sendMessage(prefix + "Usage: " + usageMessage);
+            return true;
+        }
+
+        if (args[0].equalsIgnoreCase("reload")) {
+            MinecraftServer console = MinecraftServer.getServer();
+            SapphireConfig.init((File) console.options.valueOf("sapphire-settings"));
+            console.server.reloadCount++;
+
+            sender.sendMessage(prefix + "Sapphire config reload complete, but some functions need you to restart the server.");
+        } else if (args[0].equalsIgnoreCase("version")) {
+            sender.sendMessage(prefix + "This server is running " + Bukkit.getName() + " version " + Bukkit.getVersion() + " (Implementing API version " + Bukkit.getBukkitVersion() + ", NMS version 1_18_R1)");
+        }
+        return true;
+    }
+}
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index dedf5853c7fcb88955a2e42cc8dccc8785c6fd54..8f97bc546f67ddbb5b3842d5026c6f1970a5ff25 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -239,6 +239,7 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
             DedicatedServer.LOGGER.error("Unable to load server configuration", e);
             return false;
         }
+        io.sapphiremc.sapphire.SapphireCommand.register();
         // Sapphire end
 
         this.setPvpAllowed(dedicatedserverproperties.pvp);
