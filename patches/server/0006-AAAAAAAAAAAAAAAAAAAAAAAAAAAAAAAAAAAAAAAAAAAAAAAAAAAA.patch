From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: ProstoyArtemka <ProstoyArtemka@yandex.ru>
Date: Wed, 6 Mar 2024 21:13:12 +0700
Subject: [PATCH] 
 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA


diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 0a9a77564d624d66e76637eef509e2f321333dc6..7f1c80e9b6a2785b379abea32b07b13cafd33487 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -66,6 +66,7 @@ import net.minecraft.world.InteractionHand;
 import net.minecraft.world.damagesource.CombatRules;
 import net.minecraft.world.damagesource.CombatTracker;
 import net.minecraft.world.damagesource.DamageSource;
+import net.minecraft.world.damagesource.DamageType;
 import net.minecraft.world.effect.MobEffect;
 import net.minecraft.world.effect.MobEffectInstance;
 import net.minecraft.world.effect.MobEffectUtil;
@@ -2126,7 +2127,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
 
     protected void hurtCurrentlyUsedShield(float amount) {}
 
-    protected float getDamageAfterArmorAbsorb(DamageSource source, float amount) {
+    public float getDamageAfterArmorAbsorb(DamageSource source, float amount) {
         if (!source.is(DamageTypeTags.BYPASSES_ARMOR)) {
             // this.hurtArmor(damagesource, f); // CraftBukkit - Moved into damageEntity0(DamageSource, float)
             amount = CombatRules.getDamageAfterAbsorb(amount, (float) this.getArmorValue(), (float) this.getAttributeValue(Attributes.ARMOR_TOUGHNESS));
@@ -2135,7 +2136,13 @@ public abstract class LivingEntity extends Entity implements Attackable {
         return amount;
     }
 
-    protected float getDamageAfterMagicAbsorb(DamageSource source, float amount) {
+    public float getDamageAfterArmorAbsorb(org.bukkit.entity.LivingEntity attacker, float amount) {
+        LivingEntity livingEntity = (LivingEntity) this.level().getEntity(attacker.getEntityId());
+
+        return getDamageAfterArmorAbsorb(this.level().damageSources().mobAttack(livingEntity), amount);
+    }
+
+    public float getDamageAfterMagicAbsorb(DamageSource source, float amount) {
         if (source.is(DamageTypeTags.BYPASSES_EFFECTS)) {
             return amount;
         } else {
@@ -2175,6 +2182,12 @@ public abstract class LivingEntity extends Entity implements Attackable {
         }
     }
 
+    public float getDamageAfterMagicAbsorb(org.bukkit.entity.LivingEntity attacker, float amount) {
+        LivingEntity livingEntity = (LivingEntity) this.level().getEntity(attacker.getEntityId());
+
+        return getDamageAfterMagicAbsorb(this.level().damageSources().mobAttack(livingEntity), amount);
+    }
+
     // CraftBukkit start
     protected boolean damageEntity0(final DamageSource damagesource, float f) { // void -> boolean, add final
        if (!this.isInvulnerableTo(damagesource)) {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Witch.java b/src/main/java/net/minecraft/world/entity/monster/Witch.java
index 580dff41d746d9591f718081d9dfe4ac77e7eeaa..8b96e45a36034aa0041d6c6dff662287e9e754eb 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Witch.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Witch.java
@@ -211,7 +211,7 @@ public class Witch extends Raider implements RangedAttackMob {
     }
 
     @Override
-    protected float getDamageAfterMagicAbsorb(DamageSource source, float amount) {
+    public float getDamageAfterMagicAbsorb(DamageSource source, float amount) {
         amount = super.getDamageAfterMagicAbsorb(source, amount);
         if (source.getEntity() == this) {
             amount = 0.0F;
diff --git a/src/main/java/net/minecraft/world/entity/projectile/EyeOfEnder.java b/src/main/java/net/minecraft/world/entity/projectile/EyeOfEnder.java
index e48706e2fefc39fcce3c65f629153fdcd677044c..bb02dcfa2d726a63cba7bfe8cb3f0530161678fb 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/EyeOfEnder.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/EyeOfEnder.java
@@ -15,6 +15,8 @@ import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.phys.Vec3;
+import org.bukkit.Bukkit;
+import org.bukkit.Material;
 
 public class EyeOfEnder extends Entity implements ItemSupplier {
 
@@ -35,9 +37,8 @@ public class EyeOfEnder extends Entity implements ItemSupplier {
     }
 
     public void setItem(ItemStack stack) {
-        if (true || !stack.is(Items.ENDER_EYE) || stack.hasTag()) { // CraftBukkit - always allow item changing
-            this.getEntityData().set(EyeOfEnder.DATA_ITEM_STACK, stack.copyWithCount(1));
-        }
+        // CraftBukkit - always allow item changing
+        this.getEntityData().set(EyeOfEnder.DATA_ITEM_STACK, stack.copyWithCount(1));
 
     }
 
@@ -123,6 +124,7 @@ public class EyeOfEnder extends Entity implements ItemSupplier {
 
         this.setXRot(Projectile.lerpRotation(this.xRotO, (float) (Mth.atan2(vec3d.y, d3) * 57.2957763671875D)));
         this.setYRot(Projectile.lerpRotation(this.yRotO, (float) (Mth.atan2(vec3d.x, vec3d.z) * 57.2957763671875D)));
+
         if (!this.level().isClientSide) {
             double d4 = this.tx - d0;
             double d5 = this.tz - d2;
@@ -144,12 +146,14 @@ public class EyeOfEnder extends Entity implements ItemSupplier {
 
         float f2 = 0.25F;
 
-        if (this.isInWater()) {
-            for (int j = 0; j < 4; ++j) {
-                this.level().addParticle(ParticleTypes.BUBBLE, d0 - vec3d.x * 0.25D, d1 - vec3d.y * 0.25D, d2 - vec3d.z * 0.25D, vec3d.x, vec3d.y, vec3d.z);
+        if (getItem().getBukkitStack().getType() == Material.ENDER_EYE) {
+            if (this.isInWater()) {
+                for (int j = 0; j < 4; ++j) {
+                    this.level().addParticle(ParticleTypes.BUBBLE, d0 - vec3d.x * 0.25D, d1 - vec3d.y * 0.25D, d2 - vec3d.z * 0.25D, vec3d.x, vec3d.y, vec3d.z);
+                }
+            } else {
+                //this.level().addParticle(ParticleTypes.PORTAL, d0 - vec3d.x * 0.25D + this.random.nextDouble() * 0.6D - 0.3D, d1 - vec3d.y * 0.25D - 0.5D, d2 - vec3d.z * 0.25D + this.random.nextDouble() * 0.6D - 0.3D, vec3d.x, vec3d.y, vec3d.z);
             }
-        } else {
-            this.level().addParticle(ParticleTypes.PORTAL, d0 - vec3d.x * 0.25D + this.random.nextDouble() * 0.6D - 0.3D, d1 - vec3d.y * 0.25D - 0.5D, d2 - vec3d.z * 0.25D + this.random.nextDouble() * 0.6D - 0.3D, vec3d.x, vec3d.y, vec3d.z);
         }
 
         if (!this.level().isClientSide) {
@@ -161,7 +165,8 @@ public class EyeOfEnder extends Entity implements ItemSupplier {
                 if (this.surviveAfterDeath) {
                     this.level().addFreshEntity(new ItemEntity(this.level(), this.getX(), this.getY(), this.getZ(), this.getItem()));
                 } else {
-                    this.level().levelEvent(2003, this.blockPosition(), 0);
+                    if (getItem().getBukkitStack().getType() == Material.ENDER_EYE)
+                        this.level().levelEvent(2003, this.blockPosition(), 0);
                 }
             }
         } else {
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 2ec8b8f65661001716d1cb34dcc21cda7286e5d7..f1ecd8917fe29c0160dd7c2f67e0efc6b55500bb 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -81,6 +81,7 @@ import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.server.network.ServerGamePacketListenerImpl;
 import net.minecraft.server.players.UserWhiteListEntry;
 import net.minecraft.sounds.SoundEvent;
+import net.minecraft.world.damagesource.DamageType;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.ai.attributes.AttributeInstance;
 import net.minecraft.world.entity.ai.attributes.AttributeMap;
@@ -144,7 +145,6 @@ import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
 import org.bukkit.craftbukkit.map.CraftMapView;
 import org.bukkit.craftbukkit.map.RenderData;
-import org.bukkit.craftbukkit.profile.CraftPlayerProfile;
 import org.bukkit.craftbukkit.scoreboard.CraftScoreboard;
 import org.bukkit.craftbukkit.util.CraftChatMessage;
 import org.bukkit.craftbukkit.util.CraftLocation;
@@ -157,7 +157,6 @@ import org.bukkit.event.player.PlayerExpCooldownChangeEvent;
 import org.bukkit.event.player.PlayerHideEntityEvent;
 import org.bukkit.event.player.PlayerRegisterChannelEvent;
 import org.bukkit.event.player.PlayerShowEntityEvent;
-import org.bukkit.event.player.PlayerSpawnChangeEvent;
 import org.bukkit.event.player.PlayerTeleportEvent;
 import org.bukkit.event.player.PlayerUnregisterChannelEvent;
 import org.bukkit.inventory.EquipmentSlot;
@@ -168,12 +167,12 @@ import org.bukkit.map.MapView;
 import org.bukkit.metadata.MetadataValue;
 import org.bukkit.plugin.Plugin;
 import org.bukkit.plugin.messaging.StandardMessenger;
-import org.bukkit.profile.PlayerProfile;
 import org.bukkit.scoreboard.Scoreboard;
 import org.jetbrains.annotations.NotNull;
 
 import net.md_5.bungee.api.chat.BaseComponent; // Spigot
 
+
 @DelegateDeserialization(CraftOfflinePlayer.class)
 public class CraftPlayer extends CraftHumanEntity implements Player {
     private long firstPlayed = 0;
@@ -494,6 +493,11 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         this.getHandle().displayName = name == null ? this.getName() : name;
     }
 
+    @Override
+    public void disableShield(boolean sprinting) {
+        this.getHandle().disableShield(sprinting);
+    }
+
     // Paper start
     @Override
     public void playerListName(net.kyori.adventure.text.Component name) {
@@ -3367,4 +3371,15 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         return this.spigot;
     }
     // Spigot end
+
+
+    @Override
+    public float getDamageAfterArmorAbsorb(LivingEntity attacker, float amount) {
+        return getHandle().getDamageAfterArmorAbsorb(attacker, amount);
+    }
+
+    @Override
+    public float getDamageAfterMagicAbsorb(LivingEntity attacker, float amount) {
+        return getHandle().getDamageAfterMagicAbsorb(attacker, amount);
+    }
 }
